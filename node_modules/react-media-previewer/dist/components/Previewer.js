import Modal from "rc-dialog";
import React, { useState } from "react";
import File from "./File";
import CopyToClipboard from "react-copy-to-clipboard";
import styles from "../styles/styles.module.css";
import { AiOutlineCheck, AiOutlineDownload, AiOutlineShareAlt, AiOutlineClose, AiOutlineRight, AiOutlineLeft, } from "react-icons/ai";
const PreviewModal = ({ visible, setVisible, urls }) => {
    const [copyed, setCopyed] = useState(false);
    const [index, setIndex] = useState(0);
    const currentUrl = urls[index];
    return (React.createElement(Modal, { visible: visible, onClose: () => setVisible(false), footer: null, zIndex: 10000, destroyOnClose: true, closable: false, maskClosable: false, className: styles.modalContainer, wrapClassName: styles.modalWrap, transitionName: "", maskTransitionName: "" },
        React.createElement("div", { className: "flex w-full items-center justify-end fixed top-6 right-4" },
            React.createElement("div", { className: "flex" },
                React.createElement("a", { href: `${currentUrl}?download/${currentUrl.split("/").pop()}`, className: "my-auto mx-4 bg-black rounded-full p-2" },
                    React.createElement(AiOutlineDownload, { size: "1.5rem", className: "text-white hover:!text-red-500 cursor-pointer" })),
                React.createElement(CopyToClipboard, { text: currentUrl, onCopy: () => {
                        setCopyed(true);
                        setTimeout(() => {
                            setCopyed(false);
                        }, 2000);
                    } },
                    React.createElement("a", { className: "my-auto mx-4 bg-black rounded-full p-2" }, copyed ? (React.createElement(AiOutlineCheck, { size: "1.5rem", className: "text-white hover:!text-red-500 cursor-pointer" })) : (React.createElement(AiOutlineShareAlt, { size: "1.5rem", className: "text-white hover:!text-red-500 cursor-pointer" })))),
                React.createElement("a", { className: "my-auto mx-4 bg-black rounded-full p-2" },
                    React.createElement(AiOutlineClose, { size: "1.5rem", className: "text-white hover:!text-red-500 cursor-pointer", onClick: () => setVisible(false) })))),
        React.createElement(File, { url: currentUrl }),
        React.createElement("a", { className: `my-auto mx-4 bg-black rounded-full p-3 fixed md:top-1/2 md:bottom-auto left-2 sm:bottom-8 sm:top-auto ${index === 0 ? "hidden" : "block"}`, onClick: () => {
                setIndex(index - 1);
            } },
            React.createElement(AiOutlineLeft, { size: "2rem", className: "text-white hover:!text-red-500 cursor-pointer" })),
        React.createElement("a", { className: `my-auto mx-4 bg-black rounded-full p-3 fixed md:top-1/2 md:bottom-auto right-2 sm:bottom-8 sm:top-auto ${index + 1 === urls.length ? "hidden" : "block"}`, onClick: () => {
                setIndex(index + 1);
            } },
            React.createElement(AiOutlineRight, { size: "2rem", className: "text-white hover:!text-red-500 cursor-pointer" }))));
};
export default PreviewModal;
