import React, { useState } from "react";
import mime from "mime-types";
import PDFViewer from "./PDFViewer";
import { isAudioFile, isImageFile, isOfficeExcelFile, isOfficePPTFile, isOfficeWordFile, isPDFFile, isVideoFile, } from "../utils";
import styles from "../styles/styles.module.css";
import { AiOutlineRotateLeft, AiOutlineRotateRight } from "react-icons/ai";
const PreviewModal = ({ url }) => {
    const [rotate, setRotate] = useState(0);
    const type = mime.lookup(url) || "image";
    const mediaFile = () => {
        if (isImageFile(type))
            return (React.createElement(React.Fragment, null,
                React.createElement("img", { alt: "", src: url, className: "max-h-4/5 w-full h-full block overflow-auto select-none", style: { transform: `rotate(${rotate}deg)` } }),
                React.createElement("div", { className: "fixed inset-x-1/2 bottom-8 flex justify-center" },
                    React.createElement("a", { className: "my-auto mx-4 bg-black rounded-full p-2" },
                        React.createElement(AiOutlineRotateLeft, { size: "1rem", className: "text-white hover:!text-red-500 cursor-pointer", onClick: () => setRotate(rotate - 90) })),
                    React.createElement("a", { className: "my-auto mx-4 bg-black rounded-full p-2" },
                        React.createElement(AiOutlineRotateRight, { size: "1rem", className: "text-white hover:!text-red-500 cursor-pointer", onClick: () => setRotate(rotate + 90) })))));
        if (isPDFFile(type))
            return (React.createElement("div", { className: styles.mediaContainer },
                React.createElement(PDFViewer, { url: url })));
        if (isOfficeWordFile(url))
            return (React.createElement("iframe", { className: styles.docContainer, src: `https://view.officeapps.live.com/op/embed.aspx?src=${url}` }));
        if (isOfficePPTFile(url))
            return (React.createElement("iframe", { className: styles.pptContainer, src: `https://view.officeapps.live.com/op/embed.aspx?src=${url}` }));
        if (isOfficeExcelFile(url))
            return (React.createElement("iframe", { className: styles.excelContainer, src: `https://view.officeapps.live.com/op/embed.aspx?src=${url}` }));
        if (isVideoFile(type) || isAudioFile(type))
            return (React.createElement("video", { src: url, controls: true, className: styles.mediaContainer },
                React.createElement("track", { kind: "captions" })));
        return (React.createElement("div", { className: "flex items-center justify-center text-white text-lg" }, "Unable to preview this unknown file"));
    };
    return mediaFile();
};
export default PreviewModal;
